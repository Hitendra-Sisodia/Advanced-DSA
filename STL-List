// STL list implemention is done using doubly linked list
// all inbuilt function used O(n) time complexity
#include<bits/stdc++.h>
using namespace std;
int main()
{
    list<int> l;
    list<int> n(5,100);
    l.push_back(1);
    l.push_front(2);
    l.push_back(3);
    for(auto i: l){
        cout<<i<<" ";
    }
    cout<<"front element:"<<l.front()<<endl;
    cout<<"Last element:"<<l.back()<<endl;
    cout<<"Size:"<<l.size()<<endl;
    cout<<"empty or not: "<<l.empty()<<endl;  // always return an boolean
    // l.clear();
    for(auto i: l){
        cout<<i<<" ";
    }
    cout<<endl;
    // erase
    cout<<"Before erase:"<<l.size()<<endl;
    for(auto i: l){
        cout<<i<<" ";
    }
    cout<<endl;
    l.erase(l.begin(),l.end());   // accept range as well as single iterator
    cout<<"After erase:"<<l.size()<<endl;
    for(auto i: l){
        cout<<i<<" ";
    }
}
