// Stack using linked list
#include<iostream>
using namespace std;
struct stack
{
    int data;
    stack *link;
};
bool isEmpty(stack *head)
{
    if(head == NULL){
        return true;
    }
    else{
        return false;
    }
}
void push(stack **head,int X)
{
    stack *temp = *head;
    stack *newnode = (stack *)malloc(sizeof(stack));
    if(*head == NULL){
        newnode -> data = X;
        newnode -> link = NULL;
        *head = newnode;
    }
    else{
        newnode -> data = X;
        newnode -> link = *head;
        *head = newnode;
    }
}
void pop(stack **head)
{   
    stack *temp = *head;
    if(isEmpty(*head)){
        cout<<"Stack is Underflow"<<endl;
    }
    else{
        *head = temp -> link;
        free(temp);
    }
}
void peek(stack *head)
{
    if(isEmpty(head)){
        cout<<"Stack is UnderFlow"<<endl;
    }
    else{
        cout<<"Peek: "<<head -> data<<endl;
    }
}
void display(stack *head)
{
    stack *temp = head;
    while(temp != NULL){
        cout<<temp -> data<<" ";
        temp = temp -> link;
    }
    cout<<endl;
}
int main()
{
    struct stack *head = NULL;
    push(&head,21);
    push(&head,22);
    push(&head,23);
    push(&head,24);
    push(&head,25);
    display(head); 
    peek(head);
    pop(&head);
    peek(head);
}
