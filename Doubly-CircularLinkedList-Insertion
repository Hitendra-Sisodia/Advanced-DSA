// Doubly circular linked list Insertion
#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node *prv;
    node *link;
};
node *createnode(int X)
{
    node *newnode = (node *)malloc(sizeof(node));
    newnode -> prv = NULL;
    newnode -> link = NULL;
    newnode -> data = X;
    return newnode;
}
void insertionAtHead(node **head,node **tail,int X)
{
    node *temp1 = *head;
    node *temp2 = *tail;
    node *newnode = createnode(X);
    if(*head == NULL){
        *head = newnode;
        *tail = newnode;
        newnode -> link = newnode;
        newnode -> prv = newnode;
    }
    else{
        newnode -> link = temp1;
        newnode -> prv = temp2;
        temp2 -> link = newnode;
        temp1 -> prv = newnode;
        *head = newnode;
    }
}
void insertionAtTail(node **head,node **tail,int X)
{
    node *temp1 = *head;
    node *temp2 = *tail;
    node *newnode = createnode(X);
    if(*head == NULL){
        *head = newnode;
        *tail = newnode;
        newnode -> link = newnode;
        newnode -> prv = newnode;
    }
    else{
        newnode -> link = temp1;
        newnode -> prv = temp2;
        temp2 -> link = newnode;
        temp1 -> prv = newnode;
        *tail = newnode;
    }
}
void insertionAtPos(node **head,node **tail,int X,int pos)
{   
    node *prev = NULL;
    node *temp = *head;
    node *newnode = createnode(X);
    if(*head == NULL){
        *head = newnode;
        *tail = newnode;
        newnode -> prv = newnode;
        newnode -> link = newnode;
    }
    if(pos == 1){
        insertionAtHead(&*head,&*tail,X);
    }
    for(int i = 2 ; i <= pos ; i++){
        prev = temp;
        temp = temp -> link;
    }
    newnode -> link = temp;
    newnode -> prv = prev;
    prev -> link = newnode;
    temp -> prv = newnode;
}
void display(node *head)
{
    node *temp = head;
    do{
        cout<<temp -> data<<" ";
        temp = temp -> link;
    }
    while(temp != head);
    cout<<endl;
}
void reverseDisplay(node *tail)
{
    node *temp = tail;
    do{
        cout<<temp -> data<<" ";
        temp = temp -> prv;
    }
    while(temp != tail);
    cout<<endl;
}
int main()
{
    node *head = NULL;
    node *tail = NULL;
    insertionAtHead(&head,&tail,24);
    display(head);
    insertionAtHead(&head,&tail,20);
    display(head);
    insertionAtHead(&head,&tail,10);
    display(head);
    insertionAtHead(&head,&tail,5);
    display(head);
    insertionAtTail(&head,&tail,40);
    display(head);
    insertionAtTail(&head,&tail,45);
    display(head);
    insertionAtPos(&head,&tail,15,3);
    display(head);
    reverseDisplay(tail);
}
