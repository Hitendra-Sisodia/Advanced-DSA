// delete Middle element from stack
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
void solve(stack<int> &stack,int count,int size)
{
    // base case
    if(count == size/2){
        stack.pop();
        return ;
    }
    int element = stack.top();
    stack.pop();
    solve(stack,count+1,size);
    stack.push(element);
}
void display(stack<int> st)
{
    while(!st.empty()){
        cout<<st.top()<<" ";
        st.pop();
    }
    cout<<endl;
}
int main()
{
    stack<int> st;
    int count = 0;
    st.push(21);  // bottom
    st.push(22); 
    st.push(23);
    st.push(34);  // if number are even/Odd then removing of element take place on of basic top/peek of the stack
    st.push(25);  // but counting is from bottom of the stack
    st.push(37);  // peek/top
    int N = st.size();
    cout<<N<<endl;
    display(st);
    solve(st,count,N);
    display(st);
}
