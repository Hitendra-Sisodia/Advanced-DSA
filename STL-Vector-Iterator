#include<bits/stdc++.h>
using namespace std;
int main()
{
    vector<int> v;
    //vector<int> v(5,1); 5 capacity vector with all elements filled with 1.
    cout<<"Total capacity:"<<v.capacity()<<endl;
    v.push_back(1);
    cout<<"Total capacity:"<<v.capacity()<<endl;
    v.push_back(2);
    cout<<"Total capacity:"<<v.capacity()<<endl;
    v.push_back(3);
    cout<<"Total capacity:"<<v.capacity()<<endl; // capacity tells about total size of the vector.
    cout<<"Size:"<<v.size()<<endl;               // size tells about total elements in vector.
    cout<<"Element at 2 index:"<<v.at(2)<<endl;
    cout<<"Front element:"<<v.front()<<endl;
    cout<<"Last element:"<<v.back()<<endl;
    cout<<"Before pop:";
    cout<<"clear:"<<v.clear()<,endl;
    for(auto i:v){
        cout<<i<<" ";
    }
    cout<<endl;
    v.pop_back();
    cout<<"After pop:";
    for(auto i:v){
        cout<<i<<" ";
    }
    cout<<endl;
    vector<int> &v1 = v;  // copying of one vector into another vector only refrence is taken.
    //vector<int> v1(5);  // first 5 elements of the vector initilize with 0.
    //vector<int> v1(5,4); // first 5 elements initialize with 4. 
    //vector of pair
    vector<pair<int,int> > v_p(4);
    cout<<v_p.size()<<endl;
    // input of vector of pair
    int n;
    cin>>n;
    for(int i = 0 ; i < n ; i++){
        int x,y;
        cin>>x>>y;
        pair<int,int> p = make_pair(x,y);
        v_p.push_back(p);
    }
    // printing of vector of pair(Method - 1)
    for(auto i:v_p){
        cout<<"{";
        cout<<i.first<<",";
        cout<<i.second;
        cout<<"},";
    }
    cout<<endl;
    // printing of vector of pair(Method - 2)
    for(int i= 0  ; i < v_p.size() ; i++){
        cout<<"{";
        cout<<v_p[i].first<<",";
        cout<<v_p[i].second;
        cout<<"},";
    }
    cout<<endl;
    //input of vector of array
    vector<int> v_a[10];                        // bheaves like 2d array
    int N; // Total number of vectors           // static number of rows i,e N = 10
    cin>>N;                                     // dynamic columns depend on user i,e n = ? 
    for(int i = 0 ; i < N ; i++){
        int n;  // Total number of elements in each vector
        cin>>n;
        for(int j = 0 ; j < n ; j++){
            int x;
            cin>>x;
            v_a[i].push_back(x);
        }
    }
    //printing of vector of array
    for(int i = 0 ; i < N ; i++){
        cout<<"{";
        for(int j = 0 ; j < v_a[i].size(); j++){
            cout<<v_a[i][j]<<",";
        }
        cout<<"}"<<endl;
    }
    //input of vector of vector
    vector<vector<int> > v_v;          // bheaves like 2d array
    cin>>N;
    for(int i = 0 ; i < N ; i++){
        int n;
        cin>>n;
        vector<int> temp;
        for(int j = 0 ; j < n ; j++){
            int x;
            cin>>x;
            temp.push_back(x);
        }
        v_v.push_back(temp);
    }
    //printing of vector of vector
    for(int i = 0 ; i < N ; i++){
        cout<<"{";
        for(int j = 0 ; j < v_v[i].size() ; j++){
            cout<<v_v[i][j]<<",";
        }
        cout<<"}"<<endl;
    }
    // loops in vector
    vector<pair<int,int> > v_pp = {{1,2},{3,4},{5,6}};
    // first
    cout<<"{";
    for(int i = 0 ; i < 3 ; i++){
        cout<<"{";
        cout<<v_pp[i].first<<","<<v_pp[i].second;
        cout<<"}";
    }
    cout<<"}"<<endl;
    // second
    vector<pair<int,int>>:: iterator it;
    cout<<"{";
    for(it = v_pp.begin() ; it != v_pp.end() ; it++){
        cout<<"{";
        cout<<(*it).first<<","<<(*it).second;
        cout<<"}";
    }
    cout<<"}"<<endl;
    // Third
    cout<<"{";
    for(auto it = v_pp.begin() ; it != v_pp.end() ; it++){
        cout<<"{";
        cout<<(*it).first<<","<<(*it).second;
        cout<<"}";
    }
    cout<<"}"<<endl;
    // fourth
    cout<<"{";
    for(pair<int,int> i: v_pp){
        cout<<"{";
        cout<<i.first<<","<<i.second;
        cout<<"}";
    }
    cout<<"}"<<endl;
    // fifth
    cout<<"{";
    for(auto i: v_pp){
        cout<<"{";
        cout<<i.first<<","<<i.second;
        cout<<"}";
    }
    cout<<"}"<<endl;
}
