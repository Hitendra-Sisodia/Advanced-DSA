// check for celebrity or not from the given matrix
#include<bits/stdc++.h>
using namespace std;
bool knows(vector<vector<int> > M,int a,int b)
{
    if(M[a][b] == 1){
        return true;
    }
    else{
        return false;
    }
}
int celebrityOrNot(vector<vector<int> > M,int n)
{
    stack<int> s;
    // step1: push index's in stack
    for(int i = 0 ; i < n ; i++){
        s.push(i);
    }
    // step2: pop index untill we get semi-celebrity index
    while(s.size() != 1){
        int a = s.top();
        s.pop();
        int b = s.top();
        s.pop();
        if(knows(M,a,b)){
            s.push(b);
        }
        else{
            s.push(a);
        }
    }
    int candidate = s.top();
    // step3: single element in stack is potential for celebrity
    bool rowCheck = false;
    int zeroCount = 0;
    for(int i = 0 ; i < n ; i++){
        if(M[candidate][i] == 0){
            zeroCount++;
        }
    }
    if(zeroCount == n){
        rowCheck = true;
    }
    bool columnCheck = false;
    int oneCount = 0;
    for(int i = 0 ; i < n ; i++){
        if(M[i][candidate] == 1){
            oneCount++;
        }
    }
    if(oneCount == n-1){
        columnCheck = true;
    }
    if(rowCheck == true && columnCheck == true){
        return candidate;
    }
    else{
        return -1;
    }
}
int main()
{
    vector<vector<int> > M = {{0,1,1},{0,0,1},{0,0,0}};
    int size = M.size();
    cout<<"Celebrity is:"<<celebrityOrNot(M,size);
}
